// Generated by CoffeeScript 1.6.3
(function() {
  var PlayApp;

  PlayApp = (function() {
    PlayApp.defaults = {
      article: '',
      errorClass: 'error',
      verticalGutter: 10,
      facebookAppId: void 0,
      form: void 0,
      errorArea: void 0,
      successArea: void 0
    };

    function PlayApp(params) {
      var that;
      this.params = params;
      this.options = $.extend(true, {}, this.params, this.defaults);
      if (typeof console !== "undefined" && console !== null) {
        console.log(this.options);
      }
      this.createArticleScrollbars();
      this.initRequiredField();
      this.handleFormSubmit();
      that = this;
      this.options.errorArea.find('button').on('click', function(e) {
        that.hideErrorArea();
        return that.showForm();
      });
      if (this.options.form) {
        this.firstNameField = this.options.form.find('input[name="firstName"]');
        this.lastNameField = this.options.form.find('input[name="lastName"]');
        this.emailField = this.options.form.find('input[name="email"]');
        if (this.options.facebookAppId) {
          this.runFbProcess();
        }
      }
    }

    PlayApp.prototype.showForm = function() {
      return this.options.form.slideDown('fast');
    };

    PlayApp.prototype.showErrorArea = function() {
      return this.options.errorArea.slideDown('fast');
    };

    PlayApp.prototype.hideForm = function(callback) {
      return this.options.form.slideUp('fast', callback);
    };

    PlayApp.prototype.hideErrorArea = function(callback) {
      return this.options.errorArea.slideUp('fast', callback);
    };

    PlayApp.prototype.showSuccessResponse = function() {
      this.hideForm();
      return this.options.successArea.slideDown('fast');
    };

    PlayApp.prototype.runFbProcess = function() {
      var that;
      that = this;
      $(document).on('FbApiReady', function(e) {
        if (typeof console !== "undefined" && console !== null) {
          console.log("FacebookAPI Ready, request Access");
        }
        return that.facebookApp.requestAccess();
      }).on('FbAccessGranted', function(e) {
        if (typeof console !== "undefined" && console !== null) {
          console.log('Access granted, Retrieve FB Data');
        }
        return that.facebookApp.getInformations();
      }).on('FbAccessDenied', function(e) {
        return typeof console !== "undefined" && console !== null ? console.log('Access denied by user.') : void 0;
      }).on('FbUserDataRetrieveFailed', function(e) {
        return typeof console !== "undefined" && console !== null ? console.log('Fb retrieve failed') : void 0;
      }).on('FBDataFetched', function(e, data) {
        if (typeof console !== "undefined" && console !== null) {
          console.log('Fb data fetched', data);
        }
        if (that.options.form) {
          that.firstNameField.val(data.first_name);
          that.emailField.val(data.email);
          return that.lastNameField.val(data.last_name);
        }
      });
      return this.facebookApp = new facebookClient(this.options.facebookAppId);
    };

    PlayApp.prototype.createArticleScrollbars = function() {
      var that;
      this.options.article.jScrollPane({
        verticalGutter: this.options.verticalGutter
      });
      that = this;
      return $(window).on('resize', function(e) {
        return $(that.options.article).jScrollPane();
      });
    };

    PlayApp.prototype.initRequiredField = function() {
      var that;
      that = this;
      return $('input[required]').each(function() {
        return $(this).closest('.row').find('label').addClass('required');
      });
    };

    PlayApp.prototype.handleFormSubmit = function() {
      var that;
      that = this;
      return $('form').on('submit', function(e) {
        var ajaxParameters, email, firstName, lastName;
        e.preventDefault();
        firstName = that.firstNameField.val();
        if (firstName === '') {
          that.firstNameField.addClass("error");
          that.firstNameField.trigger('focus');
          return false;
        }
        lastName = that.lastNameField.val();
        if (lastName === '') {
          that.lastNameField.addClass("error");
          that.lastNameField.trigger('focus');
          return false;
        }
        email = that.emailField.val();
        if (email === '') {
          that.emailField.addClass('error');
          that.emailField.trigger('focus');
          return false;
        }
        ajaxParameters = {
          ajax: 'add_user',
          firstname: firstName,
          lastname: lastName,
          email: email,
          newsletter: $(this).find('input[name="nl"]').is(':checked') ? 1 : void 0,
          playapp: $(this).find('input[name="followPlayApp"]:checked').val()
        };
        return $.get(that.options.apiHost, ajaxParameters, function(data) {
          if (data.status === 'OK') {
            if (typeof console !== "undefined" && console !== null) {
              console.log(data.datas);
            }
            return that.renderPlayAppResponse(data.datas);
          } else {
            return that.renderPlayAppError(data.message);
          }
        }, 'JSON');
      });
    };

    PlayApp.prototype.renderPlayAppError = function(error) {
      var that;
      if (typeof console !== "undefined" && console !== null) {
        console.log(error);
      }
      if (this.options.errorArea === null) {
        return;
      }
      that = this;
      return this.hideForm(function() {
        that.options.errorArea.find('.alert.alert-danger').html(error);
        return that.showErrorArea();
      });
    };

    PlayApp.prototype.renderPlayAppResponse = function(data) {
      var k;
      if (typeof console !== "undefined" && console !== null) {
        console.log(data);
      }
      for (k in data) {
        $("<div>" + k + ' : ' + data[k] + "</div>").appendTo(this.options.successArea.find('pre'));
      }
      return this.showSuccessResponse();
    };

    return PlayApp;

  })();

  window.playApp = PlayApp;

}).call(this);

//# sourceMappingURL=playApp.map
